name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # Allow the workflow to be manually triggered via the GitHub UI
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

env:
  NODE_VERSION: '24'

jobs:
  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Lint code
      run: yarn lint

    - name: Check formatting
      run: yarn format:check

  security:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run audit
      run: yarn audit --level high || true

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20, 22, 24]
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v5
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Build project
      run: yarn build

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: dist-node-${{ matrix.node-version }}
        path: dist/
        retention-days: 7
        if-no-files-found: error

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint, security]
    steps:
    - name: Checkout code
      uses: actions/checkout@v5

    - name: Setup Node.js
      uses: actions/setup-node@v5
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Run tests
      run: yarn test --coverage

    - name: Upload coverage reports
      uses: codecov/codecov-action@v5
      if: always()
      with:
        fail_ci_if_error: false
        verbose: true

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
    - name: Dependency Review
      uses: actions/dependency-review-action@v4
